{
  "name": "MTAutomation-action",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2024-06-05T14:26:44.492Z",
  "updated": "2024-11-05T05:35:29.519Z",
  "language": "en",
  "skill_id": "08c76d35-b10c-4f7d-83c4-f884325898c2",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_244",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please provide the tenantname:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_244",
            "next_step": "step_369"
          },
          {
            "step": "step_369",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please provide the domainname:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "tenantName"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/api/config/event_sources/log_source_management/log_source_groups",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "c8bdd8c9402f3cce7a737824e5d031da8250a2abd33c779c0ba82bc793a14ed1",
                  "catalog_item_id": "8b40474d-ce11-4906-9956-79d7005b8fbc"
                },
                "result_variable": "step_369_result_1"
              }
            },
            "variable": "step_369",
            "next_step": "step_359"
          },
          {
            "step": "step_359",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please select the Log source group name from the list which you need to add to the newly created domain."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "response_type": "response_from_variable",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "domainName"
                },
                {
                  "value": {
                    "expression": "${step_369_result_1.body}"
                  },
                  "skill_variable": "logsourcegroup_results"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "max_tries": 3,
              "option_list": {
                "templates": {
                  "label": {
                    "expression": "${item.name}"
                  }
                }
              },
              "source_variable": {
                "skill_variable": "logsourcegroup_results"
              }
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_359",
            "next_step": "step_290"
          },
          {
            "step": "step_290",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Creating the Tenant and associated Domain in QRadar Instance."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${selected_logsource_group}=${step_359}.item.id"
                  }
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "333fd78ce658c8b71d699e452b7f6a033818c3eda5c8088c63f9ac1547c647e8",
                  "catalog_item_id": "41dc3686-cda5-493d-94d0-a052dfe0c8bb"
                },
                "request_mapping": {
                  "query": [
                    {
                      "value": {
                        "skill_variable": "tenantName"
                      },
                      "parameter": "tenantName"
                    },
                    {
                      "value": {
                        "skill_variable": "domainName"
                      },
                      "parameter": "domainName"
                    },
                    {
                      "value": {
                        "skill_variable": "selected_logsource_group"
                      },
                      "parameter": "logSourceGroup"
                    },
                    {
                      "value": {
                        "scalar": "tenant"
                      },
                      "parameter": "type"
                    }
                  ]
                },
                "result_variable": "step_290_result_2"
              }
            },
            "variable": "step_290",
            "condition": {
              "exists": {
                "variable": "step_359"
              }
            },
            "next_step": "step_328"
          },
          {
            "step": "step_328",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Domain and Tenant created successfully. Please provide security profile name."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_290_result_2.body.domain.id}"
                  },
                  "skill_variable": "Domainid"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_328",
            "condition": {
              "eq": [
                {
                  "variable": "step_290_result_2",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            },
            "next_step": "step_752"
          },
          {
            "step": "step_752",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Creating the Security profile with newly created domain and tenant details."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "sp_name"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "67d653c0eb96cd024bb4c49dd40072ae6e722ae3f477265c407fbaf6b98115db",
                  "catalog_item_id": "db3547b8-161f-4099-9fd4-731bb02f5bd0"
                },
                "request_mapping": {
                  "query": [
                    {
                      "value": {
                        "skill_variable": "sp_name"
                      },
                      "parameter": "sp_name"
                    },
                    {
                      "value": {
                        "skill_variable": "selected_logsource_group"
                      },
                      "parameter": "log_source_group_id"
                    },
                    {
                      "value": {
                        "skill_variable": "Domainid"
                      },
                      "parameter": "domain_id"
                    }
                  ]
                },
                "result_variable": "step_752_result_1"
              }
            },
            "variable": "step_752",
            "condition": {
              "exists": {
                "variable": "step_328"
              }
            },
            "next_step": "step_378"
          },
          {
            "step": "step_378",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "The deployment is currently in progress. Meanwhile we will start with the user creation process, while continuing to monitor the deployment status in the following steps?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_752_result_1.body.sp_id}"
                  },
                  "skill_variable": "new_sp_id"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_378",
            "condition": {
              "exists": {
                "variable": "step_752_result_1",
                "variable_path": "body.status"
              }
            },
            "next_step": "step_420"
          },
          {
            "step": "step_420",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Fetching User roles."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_752_result_1.body.sp_id}"
                  },
                  "skill_variable": "new_sp_id"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/api/config/access/user_roles",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "479401bd9083ffde832146cc6b765ebff463826c5b383102bb8aefc66c34dc67",
                  "catalog_item_id": "8b40474d-ce11-4906-9956-79d7005b8fbc"
                },
                "result_variable": "step_420_result_1"
              }
            },
            "variable": "step_420",
            "next_step": "step_190"
          },
          {
            "step": "step_190",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Select user role from the List"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "response_type": "response_from_variable",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_420_result_1.body}"
                  },
                  "skill_variable": "userrole"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "max_tries": 3,
              "option_list": {
                "templates": {
                  "label": {
                    "expression": "${item.name}"
                  }
                }
              },
              "source_variable": {
                "skill_variable": "userrole"
              }
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_190",
            "next_step": "step_535"
          },
          {
            "step": "step_535",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Fetching the tenant id"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/api/config/access/tenant_management/tenants?filter=deleted=false",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "ec3f39966b61e08554435f7c24bc5baf531f5519dfc1503459523abbc1ad3a84",
                  "catalog_item_id": "8b40474d-ce11-4906-9956-79d7005b8fbc"
                },
                "result_variable": "step_535_result_1"
              }
            },
            "variable": "step_535",
            "condition": {
              "exists": {
                "variable": "step_190"
              }
            },
            "next_step": "step_124"
          },
          {
            "step": "step_124",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Select the tenant id from the list"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "response_type": "response_from_variable",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_535_result_1.body}"
                  },
                  "skill_variable": "tenantid"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "max_tries": 3,
              "option_list": {
                "templates": {
                  "label": {
                    "expression": "${item.name}"
                  }
                }
              },
              "source_variable": {
                "skill_variable": "tenantid"
              }
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_124",
            "next_step": "step_955"
          },
          {
            "step": "step_955",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "We are fetching the latest deployment status before proceeding further with the security profile selection."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/api/staged_config/deploy_status",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "e13164a546c48d99668fdf27140ed7448f239fefca05bc38609a7c616cd69528",
                  "catalog_item_id": "8b40474d-ce11-4906-9956-79d7005b8fbc"
                },
                "result_variable": "step_955_result_1"
              }
            },
            "variable": "step_955",
            "condition": {
              "exists": {
                "variable": "step_124"
              }
            },
            "next_step": "step_711"
          },
          {
            "step": "step_711",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Deployment is still in progress. Please proceed with the user creation process."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_711",
            "condition": {
              "exists": {
                "variable": "step_955_result_1",
                "variable_path": "body.status"
              }
            },
            "next_step": "step_333"
          },
          {
            "step": "step_333",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please provide the username."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_333",
            "condition": {
              "exists": {
                "variable": "step_124"
              }
            },
            "next_step": "step_127"
          },
          {
            "step": "step_127",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please provide the email id"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "qradar_username"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_127",
            "next_step": "step_270"
          },
          {
            "step": "step_270",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please enter the password."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "emailid"
                },
                {
                  "value": {
                    "scalar": true
                  },
                  "skill_variable": "is_password"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_270",
            "next_step": "step_424"
          },
          {
            "step": "step_424",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "We are fetching the latest deployment status before proceeding further with the security profile selection."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "password"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/api/staged_config/deploy_status",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "e13164a546c48d99668fdf27140ed7448f239fefca05bc38609a7c616cd69528",
                  "catalog_item_id": "8b40474d-ce11-4906-9956-79d7005b8fbc"
                },
                "result_variable": "step_424_result_1"
              }
            },
            "variable": "step_424",
            "condition": {
              "exists": {
                "variable": "step_270"
              }
            },
            "next_step": "step_446"
          },
          {
            "step": "step_446",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Deployment Completed Successfully.Please cross check the latest status from QRadar [**Admin tab**](https://150.239.57.231:8300/console/qradar/jsp/QRadar.jsp) and select the below option to further proceed with the user creation steps."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Deployment Successful",
                      "value": {
                        "input": {
                          "text": "Deployment Successful"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_49497",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_446",
            "condition": {
              "exists": {
                "variable": "step_424_result_1",
                "variable_path": "body.status"
              }
            },
            "next_step": "step_505"
          },
          {
            "step": "step_505",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Fetching Security Profiles."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/api/config/access/security_profiles",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "4ef287de60e56b8ef5cee98105aa4cdda055691928e5c77502361c9d9591ae4a",
                  "catalog_item_id": "8b40474d-ce11-4906-9956-79d7005b8fbc"
                },
                "result_variable": "step_505_result_1"
              }
            },
            "variable": "step_505",
            "condition": {
              "exists": {
                "variable": "step_446"
              }
            },
            "next_step": "step_225"
          },
          {
            "step": "step_225",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please select a security profile from the list below to assign to the newly created user."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "response_type": "response_from_variable",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_505_result_1.body}"
                  },
                  "skill_variable": "securityprofilelist"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "max_tries": 3,
              "option_list": {
                "templates": {
                  "label": {
                    "expression": "${item.name}"
                  }
                }
              },
              "source_variable": {
                "skill_variable": "securityprofilelist"
              }
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_225",
            "condition": {
              "eq": [
                {
                  "variable": "step_505_result_1",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            },
            "next_step": "step_768"
          },
          {
            "step": "step_768",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "To proceed with creating a new user, please access the provided [SP link  ](https://150.239.57.231:8300/console/do/config/spmanage)to clear your cache. This ensures that the latest security profile updates are reflected in the interface."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Create User",
                      "value": {
                        "input": {
                          "text": "Create User"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_8908",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_768",
            "condition": {
              "exists": {
                "variable": "step_225"
              }
            },
            "next_step": "step_129"
          },
          {
            "step": "step_129",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Creating new user for the newly created tenant"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${selectedrole}=${step_190}.item.id"
                  }
                },
                {
                  "value": {
                    "expression": "${selectedtenant}=${step_124}.item.id"
                  }
                },
                {
                  "value": {
                    "expression": "${Selected_SecurityProfileID}=${step_225}.item.id"
                  }
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/api/staged_config/access/users",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "a6a150b7c19f9430bacbd13639cddc3bbd6f48925e74d0ff79e76205b0148b5d",
                  "catalog_item_id": "8b40474d-ce11-4906-9956-79d7005b8fbc"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "emailid"
                      },
                      "parameter": "email"
                    },
                    {
                      "value": {
                        "skill_variable": "password"
                      },
                      "parameter": "password"
                    },
                    {
                      "value": {
                        "skill_variable": "qradar_username"
                      },
                      "parameter": "username"
                    },
                    {
                      "value": {
                        "skill_variable": "selectedtenant"
                      },
                      "parameter": "tenant_id"
                    },
                    {
                      "value": {
                        "skill_variable": "selectedrole"
                      },
                      "parameter": "user_role_id"
                    },
                    {
                      "value": {
                        "skill_variable": "Selected_SecurityProfileID"
                      },
                      "parameter": "security_profile_id"
                    }
                  ]
                },
                "result_variable": "step_129_result_1"
              }
            },
            "variable": "step_129",
            "condition": {
              "eq": [
                {
                  "variable": "step_768"
                },
                {
                  "value": "Create User",
                  "from_entity": "entity_8908"
                }
              ]
            },
            "next_step": "step_965"
          },
          {
            "step": "step_965",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "User Created Successfully. Please proceed with final deploy changes by selecting the below option."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Proceed with the Deploy Changes",
                      "value": {
                        "input": {
                          "text": "Proceed with the Deploy Changes"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_23246",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_965",
            "condition": {
              "and": [
                {
                  "eq": [
                    {
                      "variable": "step_129_result_1",
                      "variable_path": "success"
                    },
                    {
                      "scalar": true
                    }
                  ]
                },
                {
                  "expression": "${step_129_result_1.status}==201"
                }
              ]
            },
            "next_step": "step_417"
          },
          {
            "step": "step_417",
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/api/staged_config/deploy_status",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "17777a100f908346809ad0a6efae18d5b615f680a10a0d33483cbf3f3c6d1371",
                  "catalog_item_id": "8b40474d-ce11-4906-9956-79d7005b8fbc"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "scalar": "INCREMENTAL"
                      },
                      "parameter": "type"
                    },
                    {
                      "value": {
                        "scalar": "IN_PROGRESS"
                      },
                      "parameter": "status"
                    },
                    {
                      "value": {
                        "scalar": "Admin"
                      },
                      "parameter": "initiated_by"
                    },
                    {
                      "value": {
                        "skill_variable": "QRadar_Console_IP"
                      },
                      "parameter": "initiated_from"
                    },
                    {
                      "value": {
                        "scalar": 42
                      },
                      "parameter": "percent_complete"
                    }
                  ]
                },
                "result_variable": "step_417_result_1"
              }
            },
            "variable": "step_417",
            "condition": {
              "exists": {
                "variable": "step_965"
              }
            },
            "next_step": "step_238"
          },
          {
            "step": "step_238",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Your new tenant has been successfully onboarded!!! Please review the configuration on the UI. Would you like to create another tenant now?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_238",
            "condition": {
              "eq": [
                {
                  "variable": "step_417_result_1",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            },
            "next_step": "step_104"
          },
          {
            "step": "step_104",
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_244"
                },
                {
                  "variable": "step_369"
                },
                {
                  "variable": "step_359"
                },
                {
                  "variable": "step_290"
                },
                {
                  "variable": "step_328"
                },
                {
                  "variable": "step_752"
                },
                {
                  "variable": "step_420"
                },
                {
                  "variable": "step_190"
                },
                {
                  "variable": "step_535"
                },
                {
                  "variable": "step_124"
                },
                {
                  "variable": "step_333"
                },
                {
                  "variable": "step_127"
                },
                {
                  "variable": "step_270"
                },
                {
                  "variable": "step_505"
                },
                {
                  "variable": "step_225"
                },
                {
                  "variable": "step_129"
                },
                {
                  "variable": "step_238"
                }
              ]
            },
            "variable": "step_104",
            "condition": {
              "eq": [
                {
                  "variable": "step_238"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_522"
          },
          {
            "step": "step_522",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Thank you for using the QRadarChatBot to seamlessly onboard new clients. For more information about QRadar SIEM, please refer to the link below.\nhttps://www.ibm.com/docs/en/qsip/7.5"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_522",
            "condition": {
              "eq": [
                {
                  "variable": "step_238"
                },
                {
                  "scalar": "no"
                }
              ]
            }
          }
        ],
        "title": "QRadarMTConfiguaration",
        "action": "action_25370-5",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_25370_intent_48658-5"
        },
        "variables": [
          {
            "title": "No response",
            "variable": "step_104",
            "data_type": "any"
          },
          {
            "title": "Select the tenant id from the list",
            "variable": "step_124",
            "data_type": "any"
          },
          {
            "title": "Please provide the email id",
            "variable": "step_127",
            "data_type": "any"
          },
          {
            "title": "Creating new user for the newly created tenant",
            "privacy": {
              "enabled": false
            },
            "variable": "step_129",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_129_result_1",
            "data_type": "any"
          },
          {
            "title": "Select user role from the List",
            "variable": "step_190",
            "data_type": "any"
          },
          {
            "title": "Please select a security profile from the list below to assign t",
            "variable": "step_225",
            "data_type": "any"
          },
          {
            "title": "Your new tenant has been successfully onboarded!!! Please review",
            "privacy": {
              "enabled": false
            },
            "variable": "step_238",
            "data_type": "yes_no"
          },
          {
            "title": "Please provide the tenantname:",
            "variable": "step_244",
            "data_type": "any"
          },
          {
            "title": "Please enter the password.",
            "variable": "step_270",
            "data_type": "any"
          },
          {
            "title": "Creating the Tenant and associated Domain in QRadar Instance.",
            "variable": "step_290",
            "data_type": "any"
          },
          {
            "variable": "step_290_result_2",
            "data_type": "any"
          },
          {
            "title": "Domain and Tenant created successfully. Please provide security ",
            "variable": "step_328",
            "data_type": "any"
          },
          {
            "title": "Please provide the username.",
            "variable": "step_333",
            "data_type": "any"
          },
          {
            "title": "Please select the Log source group name from the list which you ",
            "variable": "step_359",
            "data_type": "any"
          },
          {
            "title": "Please provide the domainname:",
            "privacy": {
              "enabled": false
            },
            "variable": "step_369",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_369_result_1",
            "data_type": "any"
          },
          {
            "title": "The deployment is currently in progress. Meanwhile we will start",
            "privacy": {
              "enabled": false
            },
            "variable": "step_378",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_417",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_417_result_1",
            "data_type": "any"
          },
          {
            "title": "Fetching User roles.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_420",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_420_result_1",
            "data_type": "any"
          },
          {
            "title": "We are fetching the latest deployment status before proceeding f",
            "privacy": {
              "enabled": true
            },
            "variable": "step_424",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_424_result_1",
            "data_type": "any"
          },
          {
            "title": "Deployment Completed Successfully.Please cross check the latest ",
            "privacy": {
              "enabled": false
            },
            "variable": "step_446",
            "data_type": "any"
          },
          {
            "title": "Fetching Security Profiles.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_505",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_505_result_1",
            "data_type": "any"
          },
          {
            "title": "Thank you for using the QRadarChatBot to seamlessly onboard new ",
            "variable": "step_522",
            "data_type": "any"
          },
          {
            "title": "Fetching the tenant id",
            "privacy": {
              "enabled": false
            },
            "variable": "step_535",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_535_result_1",
            "data_type": "any"
          },
          {
            "title": "Deployment is still in progress. Please proceed with the user cr",
            "privacy": {
              "enabled": false
            },
            "variable": "step_711",
            "data_type": "any"
          },
          {
            "title": "Creating the Security profile with newly created domain and tena",
            "privacy": {
              "enabled": false
            },
            "variable": "step_752",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_752_result_1",
            "data_type": "any"
          },
          {
            "title": "To proceed with creating a new user, please access the provided ",
            "privacy": {
              "enabled": false
            },
            "variable": "step_768",
            "data_type": "any"
          },
          {
            "title": "We are fetching the latest deployment status before proceeding f",
            "privacy": {
              "enabled": false
            },
            "variable": "step_955",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_955_result_1",
            "data_type": "any"
          },
          {
            "title": "User Created Successfully. Please proceed with final deploy chan",
            "privacy": {
              "enabled": false
            },
            "variable": "step_965",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_25370-5",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_25370_intent_48658-5",
        "examples": [
          {
            "text": "Configure a New Tenant"
          },
          {
            "text": "Onboard a New Tenant"
          },
          {
            "text": "QRadar MT Configuration"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "entity_20348",
        "values": [
          {
            "type": "patterns",
            "value": "Email",
            "patterns": [
              "\\b(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\\b"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_23246",
        "values": [
          {
            "type": "synonyms",
            "value": "Proceed with the Deploy Changes",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_30398-3",
        "values": [
          {
            "type": "synonyms",
            "value": "Security Profile Created Successfully",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_49497",
        "values": [
          {
            "type": "synonyms",
            "value": "Deployment Successful",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_8908",
        "values": [
          {
            "type": "synonyms",
            "value": "Create User",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [
      {
        "title": "Domainid",
        "privacy": {
          "enabled": false
        },
        "variable": "Domainid",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "domainName",
        "variable": "domainName",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "emailid",
        "privacy": {
          "enabled": false
        },
        "variable": "emailid",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "is_password",
        "privacy": {
          "enabled": false
        },
        "variable": "is_password",
        "data_type": "boolean",
        "description": ""
      },
      {
        "title": "logsourcegroup_results",
        "variable": "logsourcegroup_results",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "new_sp_id",
        "privacy": {
          "enabled": false
        },
        "variable": "new_sp_id",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "password",
        "privacy": {
          "enabled": true
        },
        "variable": "password",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "QRadar Console IP",
        "privacy": {
          "enabled": false
        },
        "variable": "QRadar_Console_IP",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "scalar": "150.239.57.231:8300"
        }
      },
      {
        "title": "qradar-username",
        "privacy": {
          "enabled": false
        },
        "variable": "qradar_username",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "securityprofilelist",
        "privacy": {
          "enabled": false
        },
        "variable": "securityprofilelist",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "selected_logsource_group",
        "variable": "selected_logsource_group",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "selectedrole",
        "privacy": {
          "enabled": false
        },
        "variable": "selectedrole",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "selected-securityprofileid",
        "privacy": {
          "enabled": false
        },
        "variable": "Selected_SecurityProfileID",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "selectedtenant",
        "privacy": {
          "enabled": false
        },
        "variable": "selectedtenant",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "sp_name",
        "privacy": {
          "enabled": false
        },
        "variable": "sp_name",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "Status_Code",
        "privacy": {
          "enabled": false
        },
        "variable": "Status_Code",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "tenantid",
        "privacy": {
          "enabled": false
        },
        "variable": "tenantid",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "tenantName",
        "variable": "tenantName",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "userrole",
        "privacy": {
          "enabled": false
        },
        "variable": "userrole",
        "data_type": "any",
        "description": ""
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "nlp": {
        "model": "latest"
      },
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "auto_learn": {
        "apply": true
      },
      "launch_mode": {
        "default": "learning",
        "enabled": false,
        "learning": {
          "step_retry_threshold": 2,
          "use_connect_to_support": "more_often",
          "single_answer_clarification": "more_often",
          "disambiguation_clarification": "more_often"
        },
        "confident": {
          "step_retry_threshold": 4,
          "use_connect_to_support": "sometimes",
          "single_answer_clarification": "sometimes",
          "disambiguation_clarification": "sometimes"
        }
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "slot_filling": {
          "enabled": false
        }
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "search_routing": {
        "target": "conversational_search"
      },
      "spelling_auto_correct": false
    },
    "learning_opt_out": false
  },
  "description": "created for assistant bb9f2f69-de31-46fa-b50f-7ae92a73899d",
  "assistant_id": "bb9f2f69-de31-46fa-b50f-7ae92a73899d",
  "workspace_id": "08c76d35-b10c-4f7d-83c4-f884325898c2",
  "dialog_settings": {},
  "next_snapshot_version": "1",
  "environment_id": "6220ed38-bb76-4d98-a07e-8062d72d53a2"
}